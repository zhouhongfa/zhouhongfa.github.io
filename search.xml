<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[在windows上安装hadoop2.6.4]]></title>
    <url>%2F2019%2F08%2F29%2F%E5%9C%A8windows%E4%B8%8A%E5%AE%89%E8%A3%85hadoop%2F</url>
    <content type="text"><![CDATA[版本 组件 版本 hadoop 2.6.4 jdk 1.8 下载地址hadoop winutils github JDK安装略 hadoop安装配置下载，解压到 D:\BIGDATA下 配置环境变量 变量名 值 HADOOP_HOME D:\BIGDATA\hadoop-2.6.4 HADOOP_CONF_DIR %HADOOP_HOME%/etc/hadoop 配置 hadoop-env.cmd在 hadoop 目录下的 \etc\hadoop\hadoop-env.cmd 文件 修改为以下，注意路径中有空格要写成如下 Progra~1 set JAVA_HOME=C:\Progra~1\Java\jdk1.8.0_191 验证 1234C:\software\cmder_miniλ hadoopUsage: hadoop [--config confdir] COMMANDwhere COMMAND is one of: 配置 core-site.xml路径%HADOOP_HOME%/etc/hadoop/core-site.xml 内容如下 123456&lt;configuration&gt; &lt;property&gt; &lt;name&gt;fs.default.name&lt;/name&gt; &lt;value&gt;hdfs://localhost:9000&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; 配置 hdfs-site.xml 首先要创建 data 目录 在 HADOOP_HOME下创建data 目录，再创建 data/datanode data/namenode两个目录 在 hadoop 目录下的 /etc/hadoop/hdfs-site.xml 修改为以下内容 1234567891011121314&lt;configuration&gt; &lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt; &lt;value&gt;file:///D:/BIGDATA/hadoop-2.6.4/data/namenode&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt; &lt;value&gt;file:///D:/BIGDATA/hadoop-2.6.4/data/datanode&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; 配置 yarn-site.xml在 hadoop 目录下的 /etc/hadoop/yarn-site.xml下 12345678910&lt;configuration&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.auxservices.mapreduce.shuffle.class&lt;/name&gt; &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; 替换bin目录 下载 winutils github 到本地，找到对应的版本 将 HADOOP_HOME 的 bin 目录删除 将 winutils-master 里对应版本的 bin 目录复制到 HADOOP_HOME下 格式化执行以下命令 1hdfs namenode –format 有以下输出 1219/08/29 12:49:17 INFO namenode.FSImage: Allocated new BlockPoolId: BP-1502620146-192.168.168.1-156705415741719/08/29 12:49:17 INFO common.Storage: Storage directory D:\BIGDATA\hadoop-2.6.4\data\namenode has been successfully formatted. 在 HADOOP_HOME下的 data/namenode 会生成一个目录 hadoop启动与关闭启动 进入 HADOOP_HOME\sbin 目录 双击 start-all.cmd 即可(或在 cmd 中调用) 关闭 进入 HADOOP_HOME\sbin 目录 双击 stop-all.cmd 即可(或在 cmd 中调用) 一些网址 说明 网址 NameNode http://localhost:50070 ResourceManage http://localhost:8088]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>hadoop</tag>
        <tag>大数据</tag>
        <tag>yarn</tag>
        <tag>hdfs</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记一次pdf提取文本]]></title>
    <url>%2F2019%2F08%2F29%2F%E8%AE%B0%E4%B8%80%E6%AC%A1pdf%E6%8F%90%E5%8F%96%E6%96%87%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[说明需要从 十几个pdf文件中提取 xml，本来想用 pdfbox 框架来直接转的，可是测试后发现转换出来的是乱码~，于是换个思路…… 思路 首页将需要提取的文件截图（可以写个脚本来做？有空看看）使用 ocr 来转换，我用的是 腾讯AI上的，然后写个程序去调 ocr 接口，将获取的结果写入xml中，然后再用 正则替换 来修正其中的一些格式问题。 优图OCR服务注意在 腾讯AI开放平台注册，然后创建应用，需要接入 通用OCR 能力，才能调api，不然会报 no auth 错误 点击 接入能力 选择你的应用即可 批量调用接口并生成xml项目github 正则替换记录我用的 vscode 软件来替换的 正则 替换文本 说明 ^\(|〈|&lt;\s+ &lt; &lt; 去空格 ( 改为 &lt; (&lt;[a-zA-Z]+)\) $1&gt; &lt;houseNumber) 改成 &lt;houseNumber&gt; 〉|\)$ &gt; 修正 &gt; \b’|’\s?|‘|”|’ “ &quot;修正 (=)\s(&quot;)\s $1$2 Code = &quot; IN 改成 Code = &quot;IN \s?(=)\s? $1 去掉 = 两边的空格 xsi:\s|xsi\s: xsi: xsi:type 修正 执行两次~ &lt;/\s|&lt;\s/ &lt;/ 修正 &lt;/ 去掉多余的空格 \s/&gt;|/\s&gt; /&gt; 修正 /&gt; 去掉多余的空格 ^&lt;!\s-+ &lt;!-- 修正 &lt;!-- (&lt;!-)(?!-) $1- &lt;!- 改成 &lt;!-- (?&lt;!-)(-&gt;)$ -$1 -&gt; 改成 --&gt; (\d)\s(\.) $1$2 2.16 .8改成 2.16.8 (\d\.)\s $1 2.16. 1 改成 2.16.1 \s(&quot;) $1 code=&quot;30954-2 &quot; 改成 code=&quot;30954-2&quot; (=&quot;)\s $1 typeCode=&quot; RCT&quot; 改成 typeCode=&quot;RCT&quot; (&lt;[a-zA-z]+)\) $1&gt; &lt;addr) 改成 &lt;addr&gt; (?&lt;=&quot;)(?=[a-zA-Z]+=) 空格 &quot;2&quot;unit= 改成 &quot;2&quot; unit= (=&quot;)\s $1 root=&quot; 2 改成 root=&quot;2 (?&lt;=&lt;/)([a-zA-Z]+)\s $1 &lt;/entryRelat ionship&gt;改成 &lt;/entryRelationship&gt; 应多次执行 (?&lt;=&lt;/?)([a-zA-Z]+$) $1&gt; &lt;/observation 改成 &lt;/observation&gt; (&lt;[a-zA-Z]+) (?!xsi:type)(?!/&gt;)(?![a-zA-Z:]+=) $1 &lt;entryRelat ionship 改成 &lt;entryRelationship 需要多次调用以防 出现 &lt;entry Relat ionship这种情况 (&lt;[a-zA-Z]+)\.\s* $1 &lt;ass. igned 改成 &lt;assigned (\s[a-zA-Z]+)\s([a-zA-Z]+=) $1$2 extens ion=&quot;PO改成 extension=&quot;PO (\.)\n $1 将以 . 结尾的换行符去掉 \n^(=) $1 将以 =开头的前一个换行符去掉 &quot;$\n &quot;空格 将以&quot; 结尾的换行符替换来空格]]></content>
      <categories>
        <category>未分类</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
        <tag>ocr</tag>
        <tag>pdf转换</tag>
        <tag>regex</tag>
        <tag>cda</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[element-ui表格行内编辑使用]]></title>
    <url>%2F2019%2F08%2F25%2Felement-ui%E8%A1%A8%E6%A0%BC%E8%A1%8C%E5%86%85%E7%BC%96%E8%BE%91%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[说明通过使用 vue-element-extends 来拓展 element-ui 中的表格功能 参考vue-element-extends csdn博文 配置1npm install xe-utils vue-element-extends 在 main.js 里增加以下 12345import Vue from 'vue'import VueElementExtends from 'vue-element-extends'import 'vue-element-extends/lib/index.css'Vue.use(VueElementExtends) 官方示例12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667&lt;template&gt; &lt;div&gt; &lt;el-button @click=&quot;$refs.editable.insert()&quot;&gt;新增&lt;/el-button&gt; &lt;el-button @click=&quot;$refs.editable.removeSelecteds()&quot;&gt;删除选中&lt;/el-button&gt; &lt;elx-editable ref=&quot;editable&quot; :data.sync=&quot;tableData&quot;&gt; &lt;elx-editable-column type=&quot;selection&quot; width=&quot;55&quot;&gt;&lt;/elx-editable-column&gt; &lt;elx-editable-column type=&quot;index&quot; width=&quot;55&quot;&gt;&lt;/elx-editable-column&gt; &lt;elx-editable-column prop=&quot;name&quot; label=&quot;只读&quot;&gt;&lt;/elx-editable-column&gt; &lt;elx-editable-column prop=&quot;sex&quot; label=&quot;下拉&quot; :edit-render=&quot;&#123;name: &apos;ElSelect&apos;, options: sexList&#125;&quot;&gt;&lt;/elx-editable-column&gt; &lt;elx-editable-column prop=&quot;num&quot; label=&quot;数值&quot; :edit-render=&quot;&#123;name: &apos;ElInputNumber&apos;&#125;&quot;&gt;&lt;/elx-editable-column&gt; &lt;elx-editable-column prop=&quot;date&quot; label=&quot;日期&quot; :edit-render=&quot;&#123;name: &apos;ElDatePicker&apos;, props: &#123;type: &apos;date&apos;, format: &apos;yyyy-MM-dd&apos;&#125;&#125;&quot;&gt;&lt;/elx-editable-column&gt; &lt;elx-editable-column prop=&quot;flag&quot; label=&quot;开关&quot; :edit-render=&quot;&#123;name: &apos;ElSwitch&apos;, type: &apos;visible&apos;&#125;&quot;&gt;&lt;/elx-editable-column&gt; &lt;elx-editable-column prop=&quot;remark&quot; label=&quot;文本&quot; :edit-render=&quot;&#123;name: &apos;ElInput&apos;&#125;&quot;&gt;&lt;/elx-editable-column&gt; &lt;/elx-editable&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123; data () &#123; return &#123; tableData: [&#123; date: 1551322088449, name: &apos;小徐&apos;, sex: &apos;1&apos;, num: &apos;26&apos;, flag: false, remark: &apos;备注&apos; &#125;], sexList: [ &#123; &apos;label&apos;: &apos;男&apos;, &apos;value&apos;: &apos;1&apos; &#125;, &#123; &apos;label&apos;: &apos;女&apos;, &apos;value&apos;: &apos;0&apos; &#125; ] &#125; &#125;&#125;&lt;/script&gt;]]></content>
      <categories>
        <category>element-ui</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>element-ui</tag>
        <tag>vue-element-extends</tag>
        <tag>elx-editable</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo使用笔记]]></title>
    <url>%2F2019%2F08%2F24%2FHexo%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[说明记录一下搭建 hexo 博客中的一些笔记 Hexo 安装网上的教程很详细了，这里简单记一下 在 D:\Files 打开 git bash 12npm install -g hexo-clihexo init hexo-blog 12345zhf@DESKTOP-2EL8QVU MINGW64 /d/Files$ cd hexo-blog/zhf@DESKTOP-2EL8QVU MINGW64 /d/Files/hexo-blog$ npm install hexo s 启动 配置 git 12345678git initgit remote add origin https://github.com/zhouhongfa/hexo-blog.gitgit config user.email &apos;zhouhongfa1996@gmail.com&apos;git pull origin mastergit add .git commit -m &apos;init&apos;git push --set-upstream origin master next 主题配置先 fork next主题github仓库 ，(这样就能保存你的配置了，需要进入 next 目录来推，如果有更新，则用 pull request拉更新的内容，可参考 github上fork了别人的项目后，再同步更新别人的提交) 12cd hexo-bloggit clone https://github.com/zhouhongfa/hexo-theme-next.git themes/next 主题wiki github Pages部署到 github 创建一个 zhouhongfa.github.io 公开项目 _config.yml 配置如下 123deploy: type: git repo: https://github.com/zhouhongfa/zhouhongfa.github.io.git 同步到 github 上 12hexo cleanhexo deploy 头像配置主要配置 avatar 属性 123456# 配置头像路径url: /images/avatar.jpg# If true, the avatar would be dispalyed in circle.为true时会将头像显示为圆形的rounded: true# If true, the avatar would be rotated with the cursor.为true时，鼠标放在头像上会旋转~rotated: true 侧边栏配置社交栏邮箱正确配置如下 123social: GitHub: https://github.com/zhouhongfa || github E-Mail: mailto:zhouhongfa1996@gmail.com || envelope 侧边栏位置在 _config.yml 中配置 sidebar 属性 1position: right 默认展开所有目录在 _config.yml 中配置 toc 属性 1expand_all: true 搜索配置参考博客 记录一下 1npm install hexo-generator-searchdb --save 编辑博客配置文件：_config.yml 增加以下 12345search: path: search.xml field: post format: html limit: 10000 编辑主题配置文件：_config.yml 修改以下 123# Local searchlocal_search: enable: true 重新部署 点击爱心效果这里我用的 next 主题比较新，可能会不一样请参考 记录一下 在 themes/next/source/js 目录下创建 clicklove.js 文件 内容如下 1!function(e,t,a)&#123;function n()&#123;c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText="left:"+d[e].x+"px;top:"+d[e].y+"px;opacity:"+d[e].alpha+";transform:scale("+d[e].scale+","+d[e].scale+") rotate(45deg);background:"+d[e].color+";z-index:99999");requestAnimationFrame(r)&#125;function o()&#123;var t="function"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement("div");a.className="heart",d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement("style");a.type="text/css";try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName("head")[0].appendChild(a)&#125;function s()&#123;return"rgb("+~~(255*Math.random())+","+~~(255*Math.random())+","+~~(255*Math.random())+")"&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document); 修改 themes\next\layout\_layout.swig 文件 在最后的&lt;/body&gt;下加上以下 12&lt;!-- 页面点击小红心 --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/clicklove.js&quot;&gt;&lt;/script&gt; 分类和标签参考博客 记得要在 主题配置文件中解开注释 大概在 158行 menu 属性下 如何设置read more?用以下语法即可 1&lt;!--more--&gt; 图片引用问题开启 _config.yml 下的 1post_asset_folder: true 然后将需要用到的图片放置到 文章同名目录下 引用语法如下 1&#123;% asset_img 1566638486203.png test%&#125; 然后首页和文章内都能正常访问啦 语言问题需要根据主题里的文件名进行配置 如 next 主题里是 zh-CN ，就在 _config.yml 配置为 zh-CN 是配置 hexo 的配置 大概在 11 行 我是如下配置的 123language: - zh-CN- en 评论功能这里用 Gitalk 来实现、 参考 额，注意配置里的是 repo name ，也就是配置仓库名字即可，而不是克隆的地址 看板娘设置参考 1git clone https://github.com/galnetwen/Live2D.git 复制 live2d 目录到 themes/next/source下 修改 themes/next/layout/_layout.swig 文件 在 head 标签增加以下 1&lt;link rel="stylesheet" href="/live2d/css/live2d.css" /&gt; 在 body 标签增加以下 12345&lt;div id="landlord"&gt; &lt;div class="message" style="opacity:0"&gt;&lt;/div&gt; &lt;canvas id="live2d" width="280" height="250" class="live2d"&gt;&lt;/canvas&gt; &lt;div class="hide-button"&gt;隐藏&lt;/div&gt;&lt;/div&gt; 增加以下脚本 12345678910&lt;!-- 看板娘 --&gt;&lt;script type="text/javascript"&gt; var message_Path = '/live2d/' var home_Path = 'https://zhouhongfa.github.io/' //此处修改为你的域名，必须带斜杠&lt;/script&gt;&lt;script type="text/javascript" src="/live2d/js/live2d.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="/live2d/js/message.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt; loadlive2d("live2d", "/live2d/model/tia/model.json");&lt;/script&gt; 效果如下]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>next</tag>
        <tag>gitalk</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的博客]]></title>
    <url>%2F2019%2F08%2F24%2Fintroduce%2F</url>
    <content type="text"><![CDATA[hexo 搭建 https://zhouhongfa.github.io]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
